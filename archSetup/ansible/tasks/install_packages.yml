    
    # - name: Load package list
    #   include_vars:
    #     file: /files/pkglist.txt
    #     name: package_list

    # - name: Load aur package list
    #   include_vars:
    #     file: /files/aur_pkglist.txt
    #     name: package_list_aur

    - name: Install base packages
      pacman:
        name: "{{ item }}"
        state: present
      with_items: "{{ lookup('file', '/files/pkglist.txt').splitlines() }}"       
      retries: 3
      delay: 10  # Seconds between retries
    - name: Install AUR packages as user
      block:
        # 1. Prepare build environment
        - name: Create build directory in user's home
          file:
            path: "/home/{{ ansible_user }}/aur_builds"
            state: directory
            mode: '0755'
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
          become: true  # Need root to set permissions initially

        # 2. Install packages as regular user
        - name: Build and install AUR packages
          become: false
          become_user: "{{ ansible_user }}"
          environment:
            HOME: "/home/{{ ansible_user }}"
            PKGDEST: "/home/{{ ansible_user }}/aur_builds"
          command: >
            bash -c '
            set -e
            [[ ! -d "/home/{{ ansible_user }}/aur_builds/{{ item }}" ]] &&
            git clone https://aur.archlinux.org/{{ item }}.git "/home/{{ ansible_user }}/aur_builds/{{ item }}"
            cd "/home/{{ ansible_user }}/aur_builds/{{ item }}"
            makepkg -si --noconfirm --needed'
          args:
            creates: "/usr/bin/{{ item | regex_replace('-bin$', '') }}"
          loop: "{{ lookup('file', '/files/aur_pkglist.txt').splitlines() | select('match', '^[a-zA-Z0-9-]+$') | list }}"
          register: aur_install
          changed_when: aur_install.rc == 0

        # 3. Cleanup
        - name: Remove build directory
          file:
            path: "/home/{{ ansible_user }}/aur_builds"
            state: absent
          become: true
          when: aur_install is changed